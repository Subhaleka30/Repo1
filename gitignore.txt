import tensorflow as tf
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.mobilenet_v2 import MobileNetV2, preprocess_input, decode_predictions
import numpy as np

# Load pre-trained model
model = MobileNetV2(weights='imagenet')

# Map certain objects to waste categories
waste_mapping = {
    'banana': 'Biodegradable',
    'apple': 'Biodegradable',
    'orange': 'Biodegradable',
    'plastic': 'Recyclable',
    'bottle': 'Recyclable',
    'can': 'Recyclable',
    'paper': 'Recyclable',
    'mask': 'Hazardous',
    'syringe': 'Hazardous',
    'battery': 'Hazardous'
}

def classify_waste(img_path):
    # Load and preprocess image
    img = image.load_img(img_path, target_size=(224, 224))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    # Predict with model
    preds = model.predict(x)
    decoded_preds = decode_predictions(preds, top=5)[0]

    print("üîç Top Predictions:")
    for _, label, confidence in decoded_preds:
        print(f" - {label}: {confidence*100:.2f}%")
        for keyword in waste_mapping:
            if keyword in label.lower():
                print(f"\nüóëÔ∏è Waste Category: {waste_mapping[keyword]}")
                return waste_mapping[keyword]

    print("\n‚ö†Ô∏è Waste type not clearly identified.")
    return "Uncertain"

# Example usage
img_path = 'test_images/banana.jpg'  # Replace with path to your waste image
classify_waste(img_path)
